/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _HB_VIN_RPC_H_RPCGEN
#define _HB_VIN_RPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct hb_vin_bypass_arg {
	int port;
	int enable;
};
typedef struct hb_vin_bypass_arg hb_vin_bypass_arg;

struct hb_vin_cfg_arg {
	char *filename;
	int fps;
	int resolution;
	int entry_num;
	char *filecont;
};
typedef struct hb_vin_cfg_arg hb_vin_cfg_arg;

struct hb_vin_snrclk_arg {
	int entry;
	int value;
};
typedef struct hb_vin_snrclk_arg hb_vin_snrclk_arg;

struct hb_vin_pre_arg {
	int entry;
	int type;
	int value;
};
typedef struct hb_vin_pre_arg hb_vin_pre_arg;

#define VINRPC 0x2076696e
#define VINRPC_V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define HB_VIN_INIT 1
extern  int * hb_vin_init_1(int *, CLIENT *);
extern  int * hb_vin_init_1_svc(int *, struct svc_req *);
#define HB_VIN_START 2
extern  int * hb_vin_start_1(int *, CLIENT *);
extern  int * hb_vin_start_1_svc(int *, struct svc_req *);
#define HB_VIN_STOP 3
extern  int * hb_vin_stop_1(int *, CLIENT *);
extern  int * hb_vin_stop_1_svc(int *, struct svc_req *);
#define HB_VIN_DEINIT 4
extern  int * hb_vin_deinit_1(int *, CLIENT *);
extern  int * hb_vin_deinit_1_svc(int *, struct svc_req *);
#define HB_VIN_RESET 5
extern  int * hb_vin_reset_1(int *, CLIENT *);
extern  int * hb_vin_reset_1_svc(int *, struct svc_req *);
#define HB_VIN_SET_BYPASS 6
extern  int * hb_vin_set_bypass_1(hb_vin_bypass_arg *, CLIENT *);
extern  int * hb_vin_set_bypass_1_svc(hb_vin_bypass_arg *, struct svc_req *);
#define HB_CAM_MIPI_PARSE_CFG 7
extern  int * hb_cam_mipi_parse_cfg_1(hb_vin_cfg_arg *, CLIENT *);
extern  int * hb_cam_mipi_parse_cfg_1_svc(hb_vin_cfg_arg *, struct svc_req *);
#define HB_VIN_SNRCLK_SET_EN 8
extern  int * hb_vin_snrclk_set_en_1(hb_vin_snrclk_arg *, CLIENT *);
extern  int * hb_vin_snrclk_set_en_1_svc(hb_vin_snrclk_arg *, struct svc_req *);
#define HB_VIN_SNRCLK_SET_FREQ 9
extern  int * hb_vin_snrclk_set_freq_1(hb_vin_snrclk_arg *, CLIENT *);
extern  int * hb_vin_snrclk_set_freq_1_svc(hb_vin_snrclk_arg *, struct svc_req *);
#define HB_VIN_PRE_REQUEST 10
extern  int * hb_vin_pre_request_1(hb_vin_pre_arg *, CLIENT *);
extern  int * hb_vin_pre_request_1_svc(hb_vin_pre_arg *, struct svc_req *);
#define HB_VIN_PRE_RESULT 11
extern  int * hb_vin_pre_result_1(hb_vin_pre_arg *, CLIENT *);
extern  int * hb_vin_pre_result_1_svc(hb_vin_pre_arg *, struct svc_req *);
extern int vinrpc_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define HB_VIN_INIT 1
extern  int * hb_vin_init_1();
extern  int * hb_vin_init_1_svc();
#define HB_VIN_START 2
extern  int * hb_vin_start_1();
extern  int * hb_vin_start_1_svc();
#define HB_VIN_STOP 3
extern  int * hb_vin_stop_1();
extern  int * hb_vin_stop_1_svc();
#define HB_VIN_DEINIT 4
extern  int * hb_vin_deinit_1();
extern  int * hb_vin_deinit_1_svc();
#define HB_VIN_RESET 5
extern  int * hb_vin_reset_1();
extern  int * hb_vin_reset_1_svc();
#define HB_VIN_SET_BYPASS 6
extern  int * hb_vin_set_bypass_1();
extern  int * hb_vin_set_bypass_1_svc();
#define HB_CAM_MIPI_PARSE_CFG 7
extern  int * hb_cam_mipi_parse_cfg_1();
extern  int * hb_cam_mipi_parse_cfg_1_svc();
#define HB_VIN_SNRCLK_SET_EN 8
extern  int * hb_vin_snrclk_set_en_1();
extern  int * hb_vin_snrclk_set_en_1_svc();
#define HB_VIN_SNRCLK_SET_FREQ 9
extern  int * hb_vin_snrclk_set_freq_1();
extern  int * hb_vin_snrclk_set_freq_1_svc();
#define HB_VIN_PRE_REQUEST 10
extern  int * hb_vin_pre_request_1();
extern  int * hb_vin_pre_request_1_svc();
#define HB_VIN_PRE_RESULT 11
extern  int * hb_vin_pre_result_1();
extern  int * hb_vin_pre_result_1_svc();
extern int vinrpc_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_hb_vin_bypass_arg (XDR *, hb_vin_bypass_arg*);
extern  bool_t xdr_hb_vin_cfg_arg (XDR *, hb_vin_cfg_arg*);
extern  bool_t xdr_hb_vin_snrclk_arg (XDR *, hb_vin_snrclk_arg*);
extern  bool_t xdr_hb_vin_pre_arg (XDR *, hb_vin_pre_arg*);

#else /* K&R C */
extern bool_t xdr_hb_vin_bypass_arg ();
extern bool_t xdr_hb_vin_cfg_arg ();
extern bool_t xdr_hb_vin_snrclk_arg ();
extern bool_t xdr_hb_vin_pre_arg ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_HB_VIN_RPC_H_RPCGEN */
